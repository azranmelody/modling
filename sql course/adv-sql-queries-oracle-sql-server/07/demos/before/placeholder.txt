/* Course Data */
/* Table: NUMBERS */
/* Database: Oracle */
DROP TABLE NUMBERS;
CREATE TABLE NUMBERS(NUM NUMBER(1));
INSERT INTO NUMBERS VALUES(4);
INSERT INTO NUMBERS VALUES(3);
INSERT INTO NUMBERS VALUES(2);
INSERT INTO NUMBERS VALUES(1);

/* Table: FAMILY */
/* Database: Oracle */
DROP TABLE FAMILY;
CREATE TABLE FAMILY(CHILD_KEY VARCHAR2(50) NOT NULL,PARENT_KEY VARCHAR2(50));
INSERT INTO FAMILY VALUES('GRANDPARENTS',NULL);
INSERT INTO FAMILY VALUES('PARENTS','GRANDPARENTS');
INSERT INTO FAMILY VALUES('CHILD-1','PARENTS');
INSERT INTO FAMILY VALUES('CHILD-2','PARENTS');

/* Table: COMPANY */
/* Database: Oracle */
DROP TABLE COMPANY;
CREATE TABLE COMPANY(EMPLOYEE_ID NUMBER NOT NULL,EMPLOYEE_NAME VARCHAR2(10),MANAGER_ID NUMBER,SALARY NUMBER);
INSERT INTO COMPANY VALUES(1,'FRED',NULL,100000);
INSERT INTO COMPANY VALUES(2,'BARNEY',1,50000);
INSERT INTO COMPANY VALUES(3,'WILMA',1,50000);
INSERT INTO COMPANY VALUES(4,'BETTY',3,40000);
INSERT INTO COMPANY VALUES(5,'PEBBLES',3,40000);
INSERT INTO COMPANY VALUES(6,'BAM-BAM',4,20000);
INSERT INTO COMPANY VALUES(7,'DINO',4,20000);
INSERT INTO COMPANY VALUES(8,'HOPPY',4,40000);

/* Course Data */
/* Table: NUMBERS */
/* Database: SQL Server */
DROP TABLE NUMBERS;
CREATE TABLE NUMBERS(NUM INT);
INSERT INTO NUMBERS VALUES(4);
INSERT INTO NUMBERS VALUES(3);
INSERT INTO NUMBERS VALUES(2);
INSERT INTO NUMBERS VALUES(1);

/* Table: FAMILY */
/* Database: SQL Server */
DROP TABLE FAMILY;
CREATE TABLE FAMILY(CHILD_KEY VARCHAR(50) NOT NULL,PARENT_KEY VARCHAR(50));
INSERT INTO FAMILY VALUES('GRANDPARENTS',NULL);
INSERT INTO FAMILY VALUES('PARENTS','GRANDPARENTS');
INSERT INTO FAMILY VALUES('CHILD-1','PARENTS');
INSERT INTO FAMILY VALUES('CHILD-2','PARENTS');

/* Table: COMPANY */
/* Database: SQL Server */
DROP TABLE COMPANY;
CREATE TABLE COMPANY(EMPLOYEE_ID INT NOT NULL,EMPLOYEE_NAME VARCHAR(10),MANAGER_ID INT,SALARY INT);
INSERT INTO COMPANY VALUES(1,'FRED',NULL,100000);
INSERT INTO COMPANY VALUES(2,'BARNEY',1,50000);
INSERT INTO COMPANY VALUES(3,'WILMA',1,50000);
INSERT INTO COMPANY VALUES(4,'BETTY',3,40000);
INSERT INTO COMPANY VALUES(5,'PEBBLES',3,40000);
INSERT INTO COMPANY VALUES(6,'BAM-BAM',4,20000);
INSERT INTO COMPANY VALUES(7,'DINO',4,20000);
INSERT INTO COMPANY VALUES(8,'HOPPY',4,40000);

/* Recursive WITH Clause */
/* Example #1 */
WITH RSFC(ITERATION,RUNNING_FACTORIAL) AS (
  SELECT NUM AS ITERATION,
         1 AS RUNNING_FACTORIAL
   FROM NUMBERS
   WHERE NUM = 1
  UNION ALL
  SELECT R.ITERATION+1,
         R.RUNNING_FACTORIAL * B.NUM
   FROM RSFC R INNER JOIN NUMBERS B
   ON (R.ITERATION+1) = B.NUM
 )
 SELECT ITERATION,RUNNING_FACTORIAL
  FROM RSFC

/* Example #2 */
 WITH RSFC(ck,pk,lvl) AS (
   SELECT CHILD_KEY,PARENT_KEY,0 as lvl
    FROM FAMILY
    WHERE PARENT_KEY IS NULL
   UNION ALL
   SELECT CHILD_KEY,PARENT_KEY,lvl+1
    FROM RSFC R INNER JOIN FAMILY F
    ON R.ck = F.PARENT_KEY
  )
  SELECT *
   FROM RSFC

/* Example #3 */
WITH RSFC(empid,ename,mgrid,lvl) AS (
 SELECT EMPLOYEE_ID,EMPLOYEE_NAME,
        MANAGER_ID,0 as lvl
  FROM COMPANY
  WHERE MANAGER_ID=3
 UNION ALL
 SELECT EMPLOYEE_ID,EMPLOYEE_NAME,
        MANAGER_ID,lvl+1
  FROM RSFC R INNER JOIN COMPANY C
  ON C.MANAGER_ID = R.empid
)
SELECT *
 FROM RSFC

/* Adding in the manager's name */
WITH RSFC(empid,ename,mgrid,lvl) AS (
 SELECT EMPLOYEE_ID,EMPLOYEE_NAME,MANAGER_ID,0 as lvl
  FROM COMPANY
  WHERE MANAGER_ID=3
 UNION ALL
 SELECT EMPLOYEE_ID,EMPLOYEE_NAME,MANAGER_ID,lvl+1
  FROM RSFC R INNER JOIN COMPANY F
  ON F.MANAGER_ID = R.empid
)
SELECT A.EMPID,A.ENAME,A.MGRID,A.LVL,
       B.EMPLOYEE_NAME AS MGR_NAME
 FROM RSFC A LEFT JOIN COMPANY B
 ON A.MGRID=B.EMPLOYEE_ID
 ORDER BY A.LVL,A.EMPID

WITH RSFC(ITERATION,RUNNING_FACTORIAL) AS (
  SELECT NUM AS ITERATION,
         1 AS RUNNING_FACTORIAL
   FROM NUMBERS
   WHERE NUM = 1
  UNION ALL
  SELECT R.ITERATION+1,
         R.RUNNING_FACTORIAL * B.NUM
   FROM RSFC R INNER JOIN NUMBERS B
   ON (R.ITERATION+1) = B.NUM
 )
 SELECT ITERATION,RUNNING_FACTORIAL
  FROM RSFC
  OPTION (MAXRECURSION 2)

/* Example #4 */
WITH RSFC(ck,pk,lvl,hier) AS (
   SELECT EMPLOYEE_ID,MANAGER_ID,0 AS lvl,EMPLOYEE_NAME AS hier
     FROM COMPANY
     WHERE MANAGER_ID IS NULL
   UNION ALL
   SELECT EMPLOYEE_ID,MANAGER_ID,lvl+1,hier || '/' || EMPLOYEE_NAME
     FROM RSFC R INNER JOIN COMPANY F
     ON R.ck = F.MANAGER_ID
   )
  SEARCH BREADTH FIRST BY ck SET ordr
 SELECT A.lvl,A.ck,A.pk,A.hier,ordr
  FROM RSFC A
  ORDER BY ordr

/* Example #5 */
WITH RSFC(empid,ename,mgrid,lvl,sal) AS (
 SELECT EMPLOYEE_ID,EMPLOYEE_NAME,MANAGER_ID,0 as lvl,SALARY
  FROM COMPANY
  WHERE MANAGER_ID IS NULL
 UNION ALL
 SELECT EMPLOYEE_ID,EMPLOYEE_NAME,MANAGER_ID,lvl+1,SALARY
  FROM RSFC R INNER JOIN COMPANY F
  ON F.MANAGER_ID = R.empid
)
CYCLE sal SET IS_CYCLE TO 'Y' DEFAULT 'N'
SELECT *
 FROM RSFC
